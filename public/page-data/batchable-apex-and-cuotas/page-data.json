{"componentChunkName":"component---src-templates-blog-post-js","path":"/batchable-apex-and-cuotas","result":{"data":{"site":{"siteMetadata":{"title":"luciyer.me"}},"ghostPost":{"title":"Batchable Apex & Cuotas","html":"<h3 id=\"q-what-s-batchable-apex-code\">Q: What’s batchable Apex code?</h3><p>Since we’re already on this kick of writing about the weird, wonderful, and whimsical aspects of Argentine society, today we’ll talk about <em><em>cuotas</em></em>. More specifically, let’s chat about paying in cuotas, and how this reminds me of how we can use batchable Apex code in those moments when we just simply can’t afford the number we see on the pricetag.</p><p>One lesson we can learn from economics is that if there is a demand for a product or service, that product or service will exist. Even if I don’t have a credit card, I still may want, nay expect, access to credit — the ability to buy something today for $1000, and pay for it over the next, 3, 6, or 12 months. In Argentina, these plans of divided payments are called <em><em>cuotas</em></em>.</p><p>As a general rule of thumb, we can assume that the higher someone’s level of wealth, the less they <em><em>need</em></em> to depend on credit. Follow this rule down the economic ladder, and you can see that in a country like Argentina where incomes are modest, you can imagine the need for credit is both high and that the purchases made on credit can be surprisingly small. A house and a car, of course, but what about a new set of tupperware containers, your weekly groceries, your monthly cellphone bill?</p><h3 id=\"optimism-in-batches\">Optimism in Batches</h3><p>At first this stunned me, because the terms of cuota payments are, putting it lightly, lousy. After more thought, I started to understand that cuotas were a way of exercising <em><em>optimism</em></em>. They provided a way of saying “I don’t know today, but I think I can figure it out tomorrow.” In other words, when we buy something on credit or with a fixed payment plan, we’re conceding that we can’t afford it all right now. We’re saying “let’s do this in parts to smooth things out.”</p><p>Batchable Apex is the exact same. Often as a developers, we’ll need to write code which operates against a huge set of records, potentially of multiple objects. Well, in the face of governor limits, we may not be able to afford to process all of those records at once. Furthermore, even if we could do everything in one massive operation, if a single record caused a failure in our code the entire operation could fail.</p><p>Batchable Apex is just regular old Apex which implements the “Batchable” interface. I won’t explain what an interface is here, but to make something batchable we include three methods, <code>start()</code>, <code>execute()</code>, and <code>finish()</code>.</p><p>In our <code>start</code> method, we tell Salesforce which records we’ll be working with by creating a <a href=\"https://sfdc.guide/posts/soql-cheat-sheet/\">SOQL query</a>.</p><p>In <code>execute</code>, we do the work — we manipulate, update, create, delete, whatever we need to get done, we put it in here.</p><p>We finish with <code>finish</code>, a method which will run once all the processing is complete. This could send the administrator an email, for example, with a status of how everything went.</p><p>Luckily for you, if you’d like to learn more, see the code in action, or implement your own batchable Apex class, I’ve written <a href=\"https://sfdc.guide/posts/writing-batchable-schedulable-apex-code/\">a post and created a video showing the process</a> in much much more depth.</p><p>That’s all, cheers! <a href=\"https://sfdc.guide/conversations/\">Check out the other Conversations here.</a></p>","published_at":"July 17, 2019","tags":[{"name":"salesforce","slug":"salesforce"},{"name":"conversations","slug":"conversations"}]}},"pageContext":{"slug":"batchable-apex-and-cuotas","previous":{"slug":"governor-limits-table-manners","title":"Governor Limits & Table Manners","primary_tag":{"name":"salesforce","slug":"salesforce"}},"next":{"slug":"salesforce-best-practices","title":"How to Practice Best Practices","primary_tag":{"name":"salesforce","slug":"salesforce"}}}}}