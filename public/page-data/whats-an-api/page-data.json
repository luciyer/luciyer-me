{"componentChunkName":"component---src-templates-blog-post-js","path":"/whats-an-api","result":{"data":{"site":{"siteMetadata":{"title":"luciyer.me"}},"ghostPost":{"title":"APIs & Beautiful... Soup?","html":"<h3 id=\"q-what-s-an-api\">Q: What’s an API?</h3><p>API stands for <strong><strong>Application Programming Interface</strong></strong>.</p><p>Great, we got the acronym out of the way. Not a very helpful acronym since application is such a broad term, programming is such a broad term, and interface is such a broad term.</p><p>But then again, API is a broad term, a broad concept.</p><p>To the most non-technical profiles, I usually explain that an API is like a plug in the wall. Just as a wall outlet allows for a relatively standardized way for you to get electricity into your vacuum, your lamp, your cellphone, an API provides a way for developers to send and receive data in a standardized format between applications that have wildly different purposes and might speak entirely different languages.</p><h3 id=\"the-world-of-scraping\">The World of Scraping</h3><p>In high school, a friend and I decided we wanted to set up our computers as web servers to host our music and movies that we had been (very illegally) curating and building via Kazaa, Limewire, and Bittorrent. We quickly became competitive about whose server would have better design, a better interface, and ultimately the better library.</p><p>I remember a particular challenge I faced – I wanted a graphical display for my movies. I had a library of maybe 50 movies, which seemed just out of reach to manually go and find a link to a trailer, and the cover image for. IMDB existed, and I figured I’d just use that. Well at this time I don’t believe there was an API available, or if there was I wouldn’t have had any idea how to use it, so decided to <em><em>scrape</em></em> what I needed from IMDB.</p><p>If you’re not familiar, scraping is the practice of scooping up a bunch of disorganized data (usually markup such as entire webpages), and then systematically dissecting it to pull out the relevant pieces (in my case, the movie cover image and a link to a trailer). Since places like IMDB build serve pages in a predictable way, scraping can be a pretty reliable way to get data (until they change the structure, and everything is messed up, and you have to figure out why).</p><p>I dove deep into the world of <a href=\"https://www.crummy.com/software/BeautifulSoup/\" rel=\"noreferrer noopener\">BeautifulSoup4</a>. I’m ambivalent as to whether or not that was a beautiful world. I remember it being a headache often, not so much because BS4 wasn’t useful, but because scraping is neither an elegant art, nor a science.</p><h3 id=\"the-api-way\">The API Way</h3><p>Now in an alternate universe, had I known what an API was and had I simply googled “movie database api,” I’m sure I would have found a cleaner solution. Probably I could have written a script that, each time I added a movie file to my library, would automatically visit a URL like:</p><p><a href=\"https://v2.sg.media-imdb.com/suggests/s/shawshank.json\">https://v2.sg.media-imdb.com/suggests/s/shawshank.json</a></p><p>Automatically download the response:</p><pre><code>imdb$shawshank({  \n   \"v\":1,\n   \"q\":\"shawshank\",\n   \"d\":[  \n      {  \n         \"l\":\"The Shawshank Redemption\",\n         \"id\":\"tt0111161\",\n         \"s\":\"Tim Robbins, Morgan Freeman\",\n         \"y\":1994,\n         \"q\":\"feature\",\n         \"vt\":4,\n         \"i\":[  \n            \"https://m.media-amazon.com/images/M/MV5BMDFkYTc0MGEtZmNhMC00ZDIzLWFmNTEtODM1ZmRlYWMwMWFmXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_.jpg\",\n            674,\n            1000\n         ],\n         \"v\":[  \n            {  \n               \"l\":\"Official Trailer\",\n               \"id\":\"vi3877612057\",\n               \"s\":\"2:11\",\n               \"i\":[  \n                  \"https://m.media-amazon.com/images/M/MV5BNjQ2NDA3MDcxMF5BMl5BanBnXkFtZTgwMjE5NTU0NzE@._V1_.jpg\",\n                  640,\n                  480\n               ]\n            }\n         ]\n      }\n   ]\n})</code></pre><p>… and be on my merry way.</p><p>Most APIs will return JSON or XML, a structured response which almost all languages have a way of processing and extracting the good bits.</p><p>Salesforce also provides APIs, wall outlets that allow developers to write programs that push data into Salesforce and pull data out. To learn about the REST API, check out my post about <a href=\"https://sfdc.guide/posts/defining-custom-rest-endpoints-with-apex/\">REST Endpoints</a>.</p><p>That’s all, cheers! <a href=\"https://sfdc.guide/conversations/\">Check out the other Conversations here.</a></p>","published_at":"July 11, 2019","tags":[{"name":"salesforce","slug":"salesforce"},{"name":"conversations","slug":"conversations"}]}},"pageContext":{"slug":"whats-an-api","previous":{"slug":"what-about-sharing-rules","title":"What about Sharing Rules?","primary_tag":{"name":"salesforce","slug":"salesforce"}},"next":{"slug":"futbol-and-junction-objects","title":"Junction Objects & Shoddy Athletes","primary_tag":{"name":"salesforce","slug":"salesforce"}}}}}